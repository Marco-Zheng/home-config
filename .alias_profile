# other

alias tt="tmux -CC attach || tmux -CC"

alias mysql="mysql --default-character-set utf8"

alias dlv-attach="dlv --listen=:2345 --headless=true --api-version=2 attach"

notify(){
    osascript -e "display notification \"$1\" with title \"zsh notification\""
}

# proxy

alias lo0-alias="sudo ifconfig lo0 alias 100.64.0.0 255.255.255.0"

http_proxy(){
    export http_proxy=http://100.64.0.0:1087
    export https_proxy=http://100.64.0.0:1087
    export no_proxy=localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0
}

http_proxy_nas(){
    export http_proxy=http://192.168.11.11:1087
    export https_proxy=http://192.168.11.11:1087
    export no_proxy=localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
}

http_proxy_trip(){
    export http_proxy=http://hkproxy.cn1.global.ctrip.com:8080
    export https_proxy=http://hkproxy.cn1.global.ctrip.com:8080
    export no_proxy=localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
}

http_no_proxy(){
    unset http_proxy
    unset https_proxy
    unset NO_PROXY
}

pac_lan_trip(){
    networksetup -setautoproxyurl "USB 10/100/1000 LAN" "http://pac.cn1.global.ctrip.com/proxy.pac"
}

#kubernetes

MINIKUBE_CACHED_IMAGES+=(
    aylei/debug-agent:latest
    dozer47528/devops-toolkits-docker:latest
    nginx:stable
)

minikube-cache-image(){
    for i in ${MINIKUBE_CACHED_IMAGES[@]}; do
        docker pull $i
        if [[ $i =~ "/" ]] && ! test -f ~/.minikube/cache/images/${i/:/_}; then
            mkdir -p ~/.minikube/cache/images/${i/:/_}
            rm -r ~/.minikube/cache/images/${i/:/_}
        fi
        docker save $i -o ~/.minikube/cache/images/${i/:/_}
        minikube cache add $i
    done
}

pod-name(){
    kubectl get pod -l app=$1 -o jsonpath="{.items[0].metadata.name}"
}

kk() {
    uuid=$(uuidgen)
    if [[ $1 == "default" ]]; then
        cp ${HOME}/.kube/config ~/.tmp/${uuid}
    else
        cp ${HOME}/.kube/clusters/$1 ~/.tmp/${uuid}
    fi
    export KUBECONFIG=${HOME}/.tmp/${uuid}
}

_kk_completions()
{
   COMPREPLY+=("default")
   COMPREPLY+=(`ls ~/.kube/clusters`)
}

complete -F _kk_completions kk
